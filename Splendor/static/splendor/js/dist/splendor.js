const BASE_URL="https://app3774.acapp.acwing.com.cn";function refresh_tokens(){setInterval((()=>{$.ajax({url:`${BASE_URL}/gameclub/auth/jwt/token/refresh/`,type:"POST",data:{refresh:localStorage.getItem("gc-refresh")},success:t=>{localStorage.setItem("gc-access",t.access)}})}),27e4)}function clear_tokens(){localStorage.setItem("gc-access",""),localStorage.setItem("gc-refresh","")}export class SplendorLogin{constructor(t,e,s,i){this.id=t,this.os=e,this.$splendor_div=$("#"+t),localStorage.getItem("gc-access")||localStorage.setItem("gc-access",s),localStorage.getItem("gc-refresh")||localStorage.setItem("gc-refresh",i),this.start()}start(){this.$login_div=$("\n<div class='splendor-login-wrap'>\n    <div class='splendor-login-box'>\n        <div class='splendor-login-logo'>\n        </div>\n        <div class='splendor-login-content'>\n            <div class='splendor-login-title'>\n                <span>您还未登录,请前往GameClub登录</span>\n            </div>\n            <div class='splendor-login-button'>\n                <a>前往GameClub登录</a>\n            </div>\n        </div>\n    </div>\n</div>\n"),this.$login_div.hide(),this.$splendor_div.append(this.$login_div),this.add_listening_events(),this.get_info()}add_listening_events(){this.$login_div.find(".splendor-login-button").on("click",(()=>{window.location.href=`${BASE_URL}/?redirect=https://app3774.acapp.acwing.com.cn/splendor/signin/`}))}login(){this.$login_div.show()}get_info(){$.ajax({url:`${BASE_URL}/gameclub/auth/check/`,type:"post",headers:{Authorization:"Bearer "+localStorage.getItem("gc-access")},success:t=>{window.location.href=`${BASE_URL}/splendor/page/menu/`},error:t=>{this.login()}})}}export class SplendorMenu{constructor(t,e,s,i){this.id=t,this.os=e,this.room_id=s,this.need_pass=i,this.$menu_div=$("#"+this.id),this.start()}start(){this.start_ws(),this.start_room(),this.get_info(),this.create_settings()}start_ws(){this.socket=new SplendorRoomSocket(this)}start_room(){this.room=new SplendorRoom(this)}create_settings(){this.single_setting={single_mode:{name:"模式",content:["单人"]},single_player_number:{name:"人数",content:["2人","3人","4人"]}},this.room_setting={room_mode:{name:"模式",content:["多人"]},room_player_number:{name:"人数",content:["2人","3人","4人"]},room_round_second:{name:"回合秒数",content:["10s","15s","30s","35s"]},room_pass:{name:"房间密码",content:["none"]}}}create_element(){this.$base_wrap=$("\n<div class='menu-wrap'>\n    <div class='menu-player-info'>\n        <div class='player-info'>\n            <div class='player-info-left'>\n                <span></span>\n                <span></span>\n            </div>\n            <div class='player-info-right'>\n                <img>\n            </div>\n        </div>\n    </div>\n    <div class='menu-box'>\n    </div>\n</div>\n"),this.room_id&&this.room.create_room(this.player_info,this.room_id,this.need_pass,!1,null),this.$player_name=this.$base_wrap.find(".player-info-left > span:first"),this.$player_score=this.$base_wrap.find(".player-info-left > span:last"),this.$player_photo=this.$base_wrap.find(".player-info-right > img"),this.$menu_box=this.$base_wrap.find(".menu-box"),this.$menu_div.append(this.$base_wrap),this.$base_menu=$("\n<div class='menu-list' name='base-menu'>\n    <div class='menu-element' name='single'>\n        <span>单人游戏</span>\n    </div>\n    <div class='menu-element' name='multi'>\n        <span>多人游戏</span>\n    </div>\n    <div class='menu-element' name='ranklist'>\n        <span>排行榜</span>\n    </div>\n    <div class='menu-element' name='signout'>\n        <span>退出</span>\n    </div>\n</div>\n"),this.$single=this.$base_menu.find("[name='single']"),this.$multi=this.$base_menu.find("[name='multi']"),this.$rank=this.$base_menu.find("[name='ranklist']"),this.$signout=this.$base_menu.find("[name='signout']"),this.$menu_box.append(this.$base_menu),this.$single_setting=$("\n<div class='menu-setting-wrap'>\n    <div class='menu-setting-box'>\n        <div class='menu-setting-title'>\n            <span>单人设定</span>\n        </div>\n        <div class='menu-setting-config'>\n            <div class='menu-setting-content'>\n            </div>\n        </div>\n        <div class='menu-setting-button'>\n            <button>确定</button>\n            <button>取消</button>\n        </div>\n    </div>\n</div>\n"),this.$single_setting_content=this.$single_setting.find(".menu-setting-content"),this.contain_setting(this.$single_setting_content,this.single_setting),this.$single_check_button=this.$single_setting.find("button:first"),this.$single_cancel_button=this.$single_setting.find("button:last"),this.$single_setting.hide(),this.$menu_box.append(this.$single_setting),this.$multi_list=$("\n<div class='menu-list' name='multi-menu'>\n    <div class='menu-element' name='match'>\n        <span>开始匹配</span>\n    </div>\n    <div class='menu-element' name='create_room'>\n        <span>组队房间</span>\n    </div>\n    <div class='menu-element' name='multi-last'>\n        <span>上一级</span>\n    </div>\n</div>\n"),this.$match_loading=$("\n<div class='match-loading'>\n    <div class=\"rubik-loader\"></div>\n    <div></div>\n    <button>取消匹配</button>\n</div>\n"),this.$match=this.$multi_list.find("[name='match']"),this.$create_room=this.$multi_list.find("[name='create_room']"),this.$multi_last_menu=this.$multi_list.find("[name='multi-last']"),this.$multi_list.hide(),this.$menu_box.append(this.$multi_list),this.$menu_box.append(this.$match_loading),this.$create_room_setting=$("\n<div class='menu-setting-wrap'>\n    <div class='menu-setting-box'>\n        <div class='menu-setting-title'>\n            <span>房间设定</span>\n        </div>\n        <div class='menu-setting-config'>\n            <div class='menu-setting-content'>\n            </div>\n        </div>\n        <div class='menu-setting-button'>\n            <button>创建房间</button>\n            <button>取消</button>\n        </div>\n    </div>\n</div>\n"),this.$room_setting_content=this.$create_room_setting.find(".menu-setting-content"),this.contain_setting(this.$room_setting_content,this.room_setting),this.$room_check_button=this.$create_room_setting.find("button:first"),this.$room_cancel_button=this.$create_room_setting.find("button:last"),this.$create_room_setting.hide(),this.$menu_box.append(this.$create_room_setting),this.$ranklist=$("\n<div class='menu-ranklist-wrap'>\n    <div class='menu-ranklist-box'>\n        <div class='ranklist-title'>\n            <span>排行榜</span>\n            <img src=\"/static/gameclub/images/settings/cancel.svg\">\n        </div>\n        <div class='ranklist-box'>\n            <div class=\"rubik-loader\"></div>\n            <div class=\"ranklist-content-row ranklist-content-header\">\n                <span>排名</span>\n                <span>头像</span>\n                <span>昵称</span>\n                <span>分数</span>\n            </div>\n            <div class='ranklist-content'>\n            </div>\n        </div>\n        <div class=\"ranklist-content-row ranklist-content-me\">\n        </div>\n    </div>\n</div>\n"),this.$ranklist_content=this.$ranklist.find(".ranklist-content"),this.$ranklist_cancel=this.$ranklist.find("img"),this.$rubik_loader=this.$ranklist.find(".rubik-loader"),this.$ranklist_row_me=this.$ranklist.find(".ranklist-content-me"),this.$ranklist.hide(),this.$menu_box.append(this.$ranklist),$(".menu-setting-select-box").buttonset(),this.add_listening_events()}add_listening_events(){this.$single.on("click",(()=>{this.$base_menu.hide(),this.$single_setting.show()})),this.$multi.on("click",(()=>{this.$base_menu.hide(),this.$multi_list.show()})),this.$rank.on("click",(()=>{this.$base_menu.hide(),this.show_ranklist()})),this.$signout.on("click",(()=>{clear_tokens(),window.location.reload()})),this.$single_check_button.on("click",(()=>{let t=this.get_config(this.$single_setting_content);this.start_single_game(t)})),this.$single_cancel_button.on("click",(()=>{this.$single_setting.hide(),this.$base_menu.show()})),this.$room_check_button.on("click",(()=>{let t=this.get_config(this.$room_setting_content);this.create_room(t)})),this.$room_cancel_button.on("click",(()=>{this.$create_room_setting.hide(),this.$multi_list.show()})),this.$match.on("click",(()=>{this.$multi_list.hide(),this.$match_loading.show(),this.time_func_id=this.start_match_timing(),this.match_game(this.player_info)})),this.$match_loading.find("button").on("click",(()=>{this.stop_match(),this.$multi_list.show()})),this.$create_room.on("click",(()=>{this.$multi_list.hide(),this.$create_room_setting.show()})),this.$multi_last_menu.on("click",(()=>{this.$multi_list.hide(),this.$base_menu.show()})),this.$ranklist_cancel.on("click",(()=>{this.$ranklist.hide(),this.$base_menu.show()}))}create_room(t){this.socket.create_room(t)}receive_create_room(t){this.room.create_room(this.player_info,this.room_id,this.need_pass,!0,t)}match_success(t){this.stop_match_timing(this.time_func_id),this.$match_loading.find("button").hide(),this.$match_loading.find("div:last").css("color","rgb(68, 157, 68)"),this.$match_loading.find("div:last").text("匹配成功! loading..."),this.socket.join_room(t.room_id,this.player_info,t.pass,"true"),console.log("match_success")}start_game(t,e,s){let i=null;for(let t=0;t<e.length;t++)e[t].email===this.email?(e[t].character="me",i=e[t]):e[t].character="enemy";console.log("start_game",t,e,s),this.playground=new SplendorPlayground(this,t,e,s,i),this.room.hide(),this.hide()}stop_game(){this.playground&&(this.playground.close(),this.playground=null,this.show())}stop_match_timing(t){clearInterval(t)}start_match_timing(){let t=1;return this.$match_loading.find("div:last").text(""),setInterval((()=>{let e=t,s=e%60,i=Math.floor(e/60),n="匹配中... ";i>0&&(n+=i+"m"),n+=s+"s",this.$match_loading.find("div:last").text(n),t+=1}),1e3)}stop_match(){this.stop_match_timing(this.time_func_id),this.socket.stop_match(this.email,this.score),this.$match_loading.hide(),console.log("stop_match")}match_game(t){console.log("matching...",t),this.socket.match(t.email,t.score)}show_ranklist(){this.$ranklist.show(),this.rank_list?(this.$rubik_loader.hide(),this.$ranklist_content.show(),this.$ranklist_row_me.show()):this.get_ranklist()}get_ranklist(){$.ajax({url:`${BASE_URL}/splendor/auth/get_ranklist/`,type:"post",headers:{Authorization:"Bearer "+localStorage.getItem("gc-access")},data:{range_min:1,range_max:100},success:t=>{this.padding_ranklist(t),"none"!==this.$ranklist.css("display")&&(this.$rubik_loader.hide(),this.$ranklist_content.show(),this.$ranklist_row_me.show())}})}padding_ranklist(t){let e=-1,s=t.content;this.rank_list=s;let i=s.length;s.forEach(((t,s,n)=>{let o=s+1,a=t.photo,r=t.name,h=t.score,l=t.email,c=this.create_ranklist_row(o,a,r,h);1===o&&c.addClass("ranklist-content-first"),2===o&&c.addClass("ranklist-content-second"),3===o&&c.addClass("ranklist-content-third"),o===i&&c.addClass("ranklist-content-last-row"),this.email===l&&(e=o,c.addClass("ranklist-content-box-me")),this.$ranklist_content.append(c)})),-1===e&&(e="未上榜"),this.$ranklist_row_me.append($(`\n<span>${e}</span>\n<img src='${this.photo}'>\n<span>${this.name}</span>\n<span>${this.score}</span>\n`))}create_ranklist_row(t,e,s,i){return $(`\n<div class="ranklist-content-row">\n    <span>${t}</span>\n    <img src='${e}'>\n    <span>${s}</span>\n    <span>${i}</span>\n</div>\n`)}contain_setting(t,e){for(let s in e){let i=s,n=e[i],o=n.name,a=n.content;t.append(this.create_setting_config_element(i,o,a))}}get_config(t){let e=t.children("div"),s={};for(let t=0;t<e.length;t++){let i=$(e[t]),n=i.find("input")[0].name,o="";o="room_pass"===n?i.find("input").val():i.find("input:checked").val(),s[n]=o}return s}start_single_game(t){let e=parseInt(t.single_player_number[0]);t.single_player_number=e;let s=[],i=this.player_info;i.game_score=0,i.character="me",s.push(i);for(let t=1;t<e;t++)s.push({email:"robot"+t,name:"robot"+t,score:this.player_info.score,photo:"/media/default/user.jpg",game_score:0,character:"robot"});console.log("start_single_game",t,s),this.playground=new SplendorPlayground(this,t,s,"splendor-room_single",i),this.room.hide(),this.hide()}padding_info(t){this.player_info=t,this.name=t.name,this.email=t.email,this.photo=t.photo,this.score=t.score,this.back=t.back,this.create_element(),this.$player_name.text(this.name),this.$player_score.text("Score: "+this.score),this.$player_photo.attr("src",this.photo),this.$base_wrap.css("background-image","linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("+this.back+")")}get_info(){$.ajax({url:`${BASE_URL}/splendor/auth/get_info/`,type:"post",headers:{Authorization:"Bearer "+localStorage.getItem("gc-access")},success:t=>{this.padding_info(t),refresh_tokens()},error:()=>{window.location.href=`${BASE_URL}`}})}show(){this.$base_wrap.show()}hide(){this.$base_wrap.hide()}create_setting_config_element(t,e,s){let i=$(`\n<div class='menu-setting-element'>\n    <div class='menu-setting-name'>\n        <span>${e}</span>\n        <span>:</span>\n    </div>\n    <div class='menu-setting-select'>\n        <div class='menu-setting-select-box'>\n        </div>\n    </div>\n</div>\n`);if("房间密码"===e){let t=$("\n<input type='text' maxlength='4' oninput = \"value=value.replace(/[^\\d]/g,'')\" name='room_pass'>\n<span>(不填视为不设置密码)</span>\n");i.find(".menu-setting-select-box").append(t)}else s.forEach(((e,s,n)=>{let o=$(`\n<input type="radio" id="${t}${s}" value='${e}' name="${t}"><label for="${t}${s}">${e}</label>\n`);0===s&&o.attr("checked","true"),i.find(".menu-setting-select-box").append(o)}));return i}}let last_timestamp,GAME_OBJECTS=[];class GameObject{constructor(){GAME_OBJECTS.push(this),this.is_called_start=!1,this.timedelta=0,this.uuid=this.create_uuid()}create_uuid(){let t="";for(let e=0;e<8;e++)t+=Math.floor(10*Math.random());return t}start(){}update(){}late_update(){}on_destroy(){}destroy(){this.on_destroy();for(let t=0;t<GAME_OBJECTS.length;t++)if(GAME_OBJECTS[t]===this){GAME_OBJECTS.splice(t,1);break}}}class Card extends GameObject{constructor(t,e,s,i){super(),this.cm=t,this.sm=this.cm.sm,this.card_config=e,this.x=s,this.y=i,this.vx=0,this.vy=0,this.move_length=0,this.speed=1e3,this.state="board",this.role=null}get_dist(t,e,s,i){let n=(s-t)*(s-t),o=(i-e)*(i-e);return Math.sqrt(n+o)}move_to(t,e){this.move_length=this.get_dist(t,e,this.x,this.y);let s=Math.atan2(e-this.y,t-this.x);this.vx=Math.cos(s),this.vy=Math.sin(s)}update_x_y(){let t=Math.min(this.move_length,this.speed*this.timedelta*.001);this.move_length-=t,this.x+=t*this.vx,this.y+=t*this.vy}start(){}update(){this.update_x_y(),this.render()}render(){let t=[2,0,3,1];this.sm.shader_card_back(this.x,this.y,this.card_config.backIndex[0],this.card_config.backIndex[1]),this.sm.shader_top_back(this.x,this.y,[1,1,1,.5]),this.sm.shader_score(this.x,this.y,this.card_config.score-1),this.sm.shader_gem(this.x+98,this.y,GemColor2Index[this.card_config.gem]),this.card_config.spend.forEach(((e,s)=>{s=t[s];let i=Math.floor(s/2),n=s%2,o=NSColor2Index[e.color],a=e.need-1;this.sm.shader_spend(this.x+50*n,this.y+100+50*i,o,a)})),this.card_config.spend.forEach(((e,s)=>{s=t[s];let i=Math.floor(s/2),n=s%2,o=GemColor2Index[e.color];this.sm.shader_gem(this.x+50*n+40,this.y+50*i+15+100,o,{scale_x:20,scale_y:20})}))}}class CardsManager extends GameObject{constructor(t){super(),this.playground=t,this.sm=this.playground.shader_manager,this.cards={count:{level1:4,level2:4,level3:4},board_cards:{level1:[null,null,null,null],level2:[null,null,null,null],level3:[null,null,null,null]},all_cards:{level1:[],level2:[],level3:[]}},console.log(this.cards),this.init()}init(){this.init_cards()}init_cards(){"单人"!==this.playground.mode?this.init_cards_from_web():this.init_cards_from_local();for(let t=0;t<4;t++)for(let e=1;e<=3;e++)this.next_card(e,t);console.log(this.cards)}init_cards_from_local(){let t=[];for(let e=0;e<this.cards.count.level1;e++)t.push(e);t.sort((()=>.5-Math.random()));let e=[];for(let t=0;t<this.cards.count.level2;t++)e.push(t);e.sort((()=>.5-Math.random()));let s=[];for(let t=0;t<this.cards.count.level3;t++)s.push(t);s.sort((()=>.5-Math.random())),this.cards.all_cards.level1=t,this.cards.all_cards.level2=e,this.cards.all_cards.level3=s}init_cards_from_web(){}next_card(t,e){let s=t;t="level"+t;let i=this.cards.all_cards[t].pop();if(i>=0&&null===this.cards.board_cards[t][e]){let n=origin_cards[t][i];this.cards.count[t]--;let o=new Card(this,n,20,75+238*(s-1));this.cards.board_cards[t][e]=o,o.move_to(20+190*(e+1),75+238*(s-1))}}update(){this.render()}render(){let t=238;for(let e=1;e<=3;e++){this.sm.shader_card_back(20,75+(e-1)*t,e-1,5),this.sm.shader_top_back(20,75+(e-1)*t,[1,1,1,.5]);let s=this.cards.count["level"+e];s>0&&s<10?this.sm.shader_score(20,75+(e-1)*t,s-1):s>=10&&this.sm.shader_score(20,75+(e-1)*t,9)}}}class SplendorChat{constructor(t){this.playground=t,this.start()}start(){}}class Noble extends GameObject{constructor(t,e,s){super(),this.nm=t,this.sm=this.nm.sm,this.noble_config=e,this.state="board",this.role=null;this.x=1070,this.y=77+175*s,this.vx=0,this.vy=0,this.move_length=0,this.speed=800}start(){}change_state(t){this.state=t}get_dist(t,e,s,i){let n=(s-t)*(s-t),o=(i-e)*(i-e);return Math.sqrt(n+o)}move_to(t,e){this.move_length=this.get_dist(t,e,this.x,this.y);let s=Math.atan2(e-this.y,t-this.x);this.vx=Math.cos(s),this.vy=Math.sin(s)}update_x_y(){let t=Math.min(this.move_length,this.speed*this.timedelta*.001);this.move_length-=t,this.x+=t*this.vx,this.y+=t*this.vy}update(){this.update_x_y(),this.render()}render(){this.sm.shader_noble(this.x,this.y,this.noble_config.backIndex[1],this.noble_config.backIndex[0]),this.sm.shader_score(this.x+90,this.y,this.noble_config.score-1),this.sm.shader_top_back(this.x+54,this.y,[1,1,1,.2],{scale_x:140,rotation:Math.PI/2*3});let t=1;for(let e in this.noble_config.spend){let s=this.noble_config.spend[e],i=NSColor2Index[s.color],n=GemColor2Index[s.color],o=s.need-1;this.sm.shader_mini_card_back(this.x+10,this.y+145-45*t,i),this.sm.shader_score(this.x+10,this.y+145-45*t,o,{scale_x:35,scale_y:35}),this.sm.shader_gem(this.x+10+25,this.y+155-45*t,n,{scale_x:15,scale_y:15}),t++}}}class NoblesManager{constructor(t){this.playground=t,this.sm=this.playground.shader_manager,this.nobleLength=Math.min(4,this.playground.player_number+1),this.noblesIndex=[],this.nobles=[],this.start()}init_nobles(){"单人"!==this.playground.mode?this.init_nobles_from_web():this.init_nobles_from_local()}init_nobles_from_local(){let t=[];for(let e=0;e<origin_nobles.length;e++)t.push(e);t.sort((()=>.5-Math.random())),this.noblesIndex=t.slice(0,this.nobleLength-1)}init_nobles_from_web(){}start(){this.init_nobles();for(let t=0;t<this.noblesIndex.length;t++)this.nobles.push(new Noble(this,origin_nobles[this.noblesIndex[t]],t))}}class Player extends GameObject{constructor(t,e,s){super(),this.pm=t,this.sm=this.pm.sm,this.character=e.character,this.email=e.email,this.name=e.name,this.game_score=e.game_score,this.score=e.score,this.tokens_count=0,this.tokens={G:1,W:2,B:3,I:2,R:1,O:1},this.cards={G:0,W:0,B:0,I:0,R:0},this.books=[],this.nobles=[],this.index=s;this.x=1285,this.y=77+160*this.index}update_tokens(t,e){this.tokens[t]+=e}update_cards(t,e){this.cards[t]+=e}update_books(t,e,s){}update_nobles(t){this.nobles.length<3&&this.nobles.push(t)}update(){this.render()}render_photo(){this.sm.shader_player_photo(this.email,this.x+10,this.y+10)}render_cards(){let t=1;for(let e in this.cards){let s=NSColor2Index[e],i=GemColor2Index[e],n=this.cards[e];this.sm.shader_mini_card_back(this.x+35*t+10,this.y+10,s),this.sm.shader_gem(this.x+35*t+10+25,this.y+10-5,i,{scale_x:10,scale_y:10}),n>0&&this.sm.shader_score(this.x+35*t+10,this.y+10,Math.min(9,n-1),{scale_x:35,scale_y:35}),t++}}render_tokens(){let t=0;for(let e in this.tokens){let s=TokenColor2Index[e],i=this.tokens[e];this.sm.shader_token(this.x+42*t+5,this.y+50,s,{scale_x:35,scale_y:35}),i>0&&this.sm.shader_score(this.x+42*t+5,this.y+50-3,i-1,{scale_x:35,scale_y:35}),t++}}render_books(){for(let t in this.books)this.books[t].update()}render_nobles(){for(let t in this.nobles)this.nobles[t].update()}render(){this.sm.shader_top_back(this.x,this.y,[0,0,0,.5],{scale_x:260,scale_y:150}),this.render_photo(),this.render_cards(),this.render_tokens(),this.render_books(),this.render_nobles()}}class PlayersManager{constructor(t){this.playground=t,this.sm=this.playground.shader_manager,this.number=this.playground.player_number,this.players_config=[],this.players=[],this.roundi=0,this.start()}start(){for(let t in this.playground.players){let e=this.playground.players[t];this.players_config.push({email:e.email,name:e.name,photo:e.photo,character:e.character,game_score:e.game_score,score:e.score})}for(let t=0;t<this.number;t++)this.players.push(new Player(this,this.players_config[t],t))}next_player(){this.roundi=(this.roundi+1)%this.number}player_buy(t,e){}player_book(t,e){}player_noble(t,e){}player_pick(t,e){}}class Token extends GameObject{constructor(t,e,s,i){super(),this.tm=t,this.sm=this.tm.sm,this.color=e,this.x=s,this.y=i,this.vx=0,this.vy=0,this.move_length=0,this.speed=800,this.state="board"}get_dist(t,e,s,i){let n=(s-t)*(s-t),o=(i-e)*(i-e);return Math.sqrt(n+o)}move_to(t,e){this.move_length=this.get_dist(t,e,this.x,this.y);let s=Math.atan2(e-this.y,t-this.x);this.vx=Math.cos(s),this.vy=Math.sin(s)}update_x_y(){let t=Math.min(this.move_length,this.speed*this.timedelta*.001);this.move_length-=t,this.x+=t*this.vx,this.y+=t*this.vy}start(){}change_state(t){this.state=t}update(){"unshow"!==this.state&&(this.update_x_y(),this.render())}render(){this.sm.shader_token(this.x,this.y,TokenColor2Index[this.color])}}class TokensManager extends GameObject{constructor(t){super(),this.playground=t,this.sm=this.playground.shader_manager;let e=0;switch(this.playground.player_number){case 2:e=4;break;case 3:e=5;break;default:e=7}this.tokens={G:{count:e,instance:[]},W:{count:e,instance:[]},B:{count:e,instance:[]},I:{count:e,instance:[]},R:{count:e,instance:[]},O:{count:5,instance:[]}},this.offset_x=970,this.offset_y=100,this.y_step=115,this.t_step=5}select_by_player(t){}unselect_by_player(t){}picked_by_player(t,e){}used_by_player(t,e){}move_to(t,e){}start(){let t=0,e=this.offset_x,s=this.offset_y,i=this.y_step,n=this.t_step;for(let o in this.tokens){for(let a=0;a<3;a++)this.tokens[o].instance.push(new Token(this,o,e,s+t*i-n*a));t++}}update(){for(let t in this.tokens){for(let e=0;e<Math.min(3,this.tokens[t].count);e++)this.tokens[t].instance[e].change_state("board");for(let e=Math.min(3,this.tokens[t].count);e<3;e++)this.tokens[t].instance[e].change_state("unshow")}}late_update(){let t=0,e=this.offset_x,s=this.offset_y,i=this.y_step;for(let n in this.tokens)this.tokens[n].count>0&&this.render(this.tokens[n].count,e-15,s+t*i-15),t++}render(t,e,s){this.sm.shader_score(e,s,t-1,{scale_x:40,scale_y:40})}}class TopBoard{constructor(t){this.playground=t,this.room_id=this.playground.room_id,this.round=1,this.time=0}start(){}}let m3={projection:function(t,e){return[2/t,0,0,0,-2/e,0,-1,1,1]},identity:function(){return[1,0,0,0,1,0,0,0,1]},translation:function(t,e){return[1,0,0,0,1,0,t,e,1]},rotation:function(t){var e=Math.cos(t),s=Math.sin(t);return[e,-s,0,s,e,0,0,0,1]},scaling:function(t,e){return[t,0,0,0,e,0,0,0,1]},multiply:function(t,e){var s=t[0],i=t[1],n=t[2],o=t[3],a=t[4],r=t[5],h=t[6],l=t[7],c=t[8],d=e[0],_=e[1],m=e[2],g=e[3],p=e[4],u=e[5],f=e[6],v=e[7],b=e[8];return[d*s+_*o+m*h,d*i+_*a+m*l,d*n+_*r+m*c,g*s+p*o+u*h,g*i+p*a+u*l,g*n+p*r+u*c,f*s+v*o+b*h,f*i+v*a+b*l,f*n+v*r+b*c]}};function get_matrix(t,e,s,i,n){let o=m3.identity();return n||(o=m3.projection(t.canvas.clientWidth,t.canvas.clientHeight)),o=m3.multiply(o,m3.translation(e[0],e[1])),o=m3.multiply(o,m3.rotation(s)),o=m3.multiply(o,m3.scaling(i[0],i[1])),o}let W="W",B="B",I="I",R="R",G="G",O="O",GemColor2Index={W:0,B:1,I:2,R:3,G:4},NSColor2Index={W:1,B:2,I:0,R:4,G:3},TokenColor2Index={W:1,B:2,I:3,R:4,G:0,O:5},origin_nobles=[{id:41,score:3,backIndex:[0,1],spend:[{color:W,need:4},{color:B,need:4}]},{id:41,score:3,backIndex:[0,2],spend:[{color:W,need:4},{color:I,need:4}]},{id:41,score:3,backIndex:[1,1],spend:[{color:W,need:3},{color:B,need:3},{color:I,need:3}]},{id:41,score:3,backIndex:[1,2],spend:[{color:R,need:3},{color:I,need:3},{color:G,need:3}]}],origin_cards={level1:[{id:11,gem:W,score:0,backIndex:[1,2],spend:[{color:W,need:1},{color:B,need:1},{color:I,need:1},{color:G,need:1}]},{id:12,gem:W,score:0,backIndex:[1,3],spend:[{color:W,need:1},{color:B,need:1},{color:I,need:1},{color:G,need:1}]},{id:13,gem:W,score:0,backIndex:[1,4],spend:[{color:W,need:1},{color:B,need:1},{color:I,need:1},{color:G,need:1}]},{id:14,gem:W,score:0,backIndex:[1,1],spend:[{color:W,need:1},{color:B,need:1},{color:I,need:1},{color:G,need:1}]}],level2:[{id:21,gem:W,score:2,backIndex:[2,1],spend:[{color:W,need:2},{color:B,need:3},{color:I,need:3}]},{id:22,gem:W,score:1,backIndex:[2,2],spend:[{color:W,need:2},{color:B,need:2},{color:I,need:3}]},{id:23,gem:W,score:2,backIndex:[2,3],spend:[{color:W,need:2},{color:B,need:3},{color:I,need:3}]},{id:24,gem:W,score:1,backIndex:[2,4],spend:[{color:W,need:2},{color:B,need:2},{color:I,need:3}]}],level3:[{id:31,gem:B,score:5,backIndex:[3,1],spend:[{color:W,need:3},{color:B,need:7}]},{id:32,gem:G,score:5,backIndex:[3,2],spend:[{color:W,need:3},{color:B,need:7}]},{id:33,gem:B,score:4,backIndex:[3,3],spend:[{color:W,need:3},{color:B,need:3},{color:I,need:3},{color:R,need:5}]},{id:34,gem:I,score:5,backIndex:[3,4],spend:[{color:W,need:3},{color:B,need:7}]}]};class ImageShader{constructor(t){this.sm=t,this.gl=this.sm.gl,this.name="ImageShader",this.sm.shader_dict[this.name]=this,console.log("loading shader",this.name),this.init()}shader_text(){this.vs="\n        attribute vec2 a_position;\n        attribute vec2 a_texCoord;\n\n        uniform mat3 u_position_matrix;\n        uniform mat3 u_texCoord_matrix;\n        \n        varying vec2 v_texCoord;\n        \n        void main() {\n            gl_Position = vec4((u_position_matrix * vec3(a_position, 1)).xy, 0, 1);\n            v_texCoord = (u_texCoord_matrix * vec3(a_texCoord, 1)).xy;\n        }\n        ",this.fs="\n        precision mediump float;\n        \n        uniform sampler2D u_image;\n        \n        varying vec2 v_texCoord;\n        \n        void main() {\n            gl_FragColor = texture2D(u_image, v_texCoord);\n        }\n        "}init(){const t=this.gl,e=this.sm;this.shader_text();let s=e.createProgramFromText(t,this.vs,this.fs),i=t.getAttribLocation(s,"a_position"),n=t.getAttribLocation(s,"a_texCoord"),o=t.getUniformLocation(s,"u_resolution"),a=t.getUniformLocation(s,"u_position_matrix"),r=t.getUniformLocation(s,"u_texCoord_matrix"),h=t.getUniformLocation(s,"u_image");const l=new Float32Array(e.get_point_from(0,0,1,1)),c=new Float32Array(e.get_point_from(0,0,1,1)),d=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,d),t.bufferData(t.ARRAY_BUFFER,l,t.STATIC_DRAW);const _=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,_),t.bufferData(t.ARRAY_BUFFER,c,t.STATIC_DRAW);let m={program:s,a_position:{loc:i,buffer:d},a_texCoord:{loc:n,buffer:_},u_resolution:o,u_image:h,u_position_matrix:a,u_texCoord_matrix:r};this.programInfo=m}draw(t,e,s){const i=this.gl,n=this.sm;let o=this.programInfo;n.resize(i),i.viewport(0,0,i.canvas.width,i.canvas.height),i.enable(i.BLEND),i.blendFunc(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA),i.useProgram(o.program),this.set_pointer(o),this.set_uniform(o,t,e,s),i.drawArrays(i.TRIANGLES,0,6)}set_pointer(t){const e=this.gl,s=t.a_position.loc,i=t.a_position.buffer;e.enableVertexAttribArray(s),e.bindBuffer(e.ARRAY_BUFFER,i),e.vertexAttribPointer(s,2,e.FLOAT,!1,0,0);const n=t.a_texCoord.loc,o=t.a_texCoord.buffer;e.enableVertexAttribArray(n),e.bindBuffer(e.ARRAY_BUFFER,o),e.vertexAttribPointer(n,2,e.FLOAT,!1,0,0)}set_uniform(t,e,s,i){const n=this.gl;n.uniform2fv(t.u_resolution,[n.canvas.width,n.canvas.height]),n.uniformMatrix3fv(t.u_position_matrix,!1,s),n.uniformMatrix3fv(t.u_texCoord_matrix,!1,i);n.activeTexture(n.TEXTURE0+2),n.bindTexture(n.TEXTURE_2D,e),n.uniform1i(t.u_image,2)}}class PreProcessTexture{constructor(t){this.sm=t,this.base_url=`${BASE_URL}/static/splendor/assets`,this.texture_dict={cards:null,gems:null,nobles:null,tokens:null,numbers_sheet:null},this.start()}start(){this.preProcess()}init_texture(t){const e=this.sm.gl,s=e.createTexture();return e.bindTexture(e.TEXTURE_2D,s),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t),s}preProcess(){this.texture_dict.players={};for(let t in this.texture_dict){let e=new Image;e.src=`${this.base_url}/${t}.jpg`,e.onload=()=>{this.texture_dict[t]=this.init_texture(e)}}for(let t in this.sm.playground.players){let e=this.sm.playground.players[t].photo,s=this.sm.playground.players[t].email,i=new Image;i.src=e,i.onload=()=>{this.texture_dict.players[s]=this.init_texture(i)}}}get(t){return this.texture_dict[t]}}class RectShader{constructor(t){this.sm=t,this.gl=this.sm.gl,this.name="RectShader",this.sm.shader_dict[this.name]=this,console.log("loading shader",this.name),this.init()}shader_text(){this.vs="\n            attribute vec2 a_position;\n\n            uniform mat3 u_position_matrix;\n\n            void main(){\n                gl_Position = vec4((u_position_matrix * vec3(a_position, 1)).xy, 0, 1);\n            }\n        ",this.fs="\n            precision mediump float;\n\n            uniform vec4 u_color;\n\n            void main(){\n                gl_FragColor = u_color;\n            }\n        "}init(){const t=this.gl,e=this.sm;this.shader_text();let s=e.createProgramFromText(t,this.vs,this.fs),i=t.getAttribLocation(s,"a_position"),n=t.getUniformLocation(s,"u_position_matrix"),o=t.getUniformLocation(s,"u_color");const a=new Float32Array(e.get_point_from(0,0,1,1)),r=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,r),t.bufferData(t.ARRAY_BUFFER,a,t.STATIC_DRAW);let h={program:s,a_position:{loc:i,buffer:r},u_position_matrix:n,u_color:o};this.programInfo=h}draw(t,e){const s=this.gl,i=this.sm;let n=this.programInfo;i.resize(s),s.viewport(0,0,s.canvas.width,s.canvas.height),s.useProgram(n.program),this.set_pointer(n),this.set_uniform(n,t,e),s.drawArrays(s.TRIANGLES,0,6)}set_pointer(t){const e=this.gl,s=t.a_position.loc,i=t.a_position.buffer;e.enableVertexAttribArray(s),e.bindBuffer(e.ARRAY_BUFFER,i),e.vertexAttribPointer(s,2,e.FLOAT,!1,0,0)}set_uniform(t,e,s){const i=this.gl;i.uniformMatrix3fv(t.u_position_matrix,!1,e),i.uniform4fv(t.u_color,s)}}class ShaderManager{constructor(t){this.playground=t,this.gl=this.playground.gl,this.shader_dict={}}shader_player_photo(t,e,s,i){let n=this.get("ImageShader"),o=this.tm.get("players")[t],a=(i=i||{}).scale_x||30,r=i.scale_y||30,h=i.rotation||0,l=get_matrix(this.gl,[e,s],h,[a,r],!1),c=get_matrix(this.gl,[0,0],0,[1,1],!0);n.draw(o,l,c)}shader_card_back(t,e,s,i,n){let o=this.get("ImageShader"),a=this.tm.get("cards"),r=(n=n||{}).scale_x||150,h=n.scale_y||203,l=n.rotation||0,c=get_matrix(this.gl,[t,e],l,[r,h],!1),d=get_matrix(this.gl,[.2*s,.1666*i],0,[.1998,.1665],!0);o.draw(a,c,d)}shader_top_back(t,e,s,i){let n=this.get("RectShader"),o=(i=i||{}).rotation||0,a=i.scale_x||150,r=i.scale_y||54,h=get_matrix(this.gl,[t,e],o,[a,r],!1);n.draw(h,s)}shader_score(t,e,s,i){let n=this.get("ImageShader"),o=this.tm.get("numbers_sheet"),a=(i=i||{}).rotation||0,r=i.scale_x||50,h=i.scale_y||50,l=get_matrix(this.gl,[t,e],a,[r,h],!1),c=get_matrix(this.gl,[.1*s,.6666],0,[.1,.3333],!0);n.draw(o,l,c)}shader_mini_card_back(t,e,s,i){let n=this.get("ImageShader"),o=this.tm.get("numbers_sheet"),a=(i=i||{}).rotation||0,r=i.scale_x||35,h=i.scale_y||35,l=get_matrix(this.gl,[t,e],a,[r,h],!1),c=get_matrix(this.gl,[.1*s,0],0,[.1,.3333],!0);n.draw(o,l,c)}shader_gem(t,e,s,i){let n=this.get("ImageShader"),o=this.tm.get("gems"),a=(i=i||{}).rotation||0,r=i.scale_x||45,h=i.scale_y||45,l=get_matrix(this.gl,[t+2.5,e+2.5],a,[r,h],!1),c=get_matrix(this.gl,[.2*s,0],0,[.2,1],!0);n.draw(o,l,c)}shader_spend(t,e,s,i){let n=this.get("ImageShader"),o=this.tm.get("numbers_sheet"),a=get_matrix(this.gl,[t,e],0,[50,50],!1),r=get_matrix(this.gl,[.1*s,.3333],0,[.1,.3333],!0);n.draw(o,a,r),this.shader_score(t,e,i)}shader_token(t,e,s,i){let n=this.get("ImageShader"),o=this.tm.get("tokens"),a=(i=i||{}).rotation||0,r=i.scale_x||70,h=i.scale_y||70,l=get_matrix(this.gl,[t,e],a,[r,h],!1),c=get_matrix(this.gl,[.16666*s,0],0,[.16667,1],!0);n.draw(o,l,c)}shader_noble(t,e,s,i,n){let o=this.get("ImageShader"),a=this.tm.get("nobles"),r=(n=n||{}).rotation||0,h=n.scale_x||140,l=n.scale_y||140,c=get_matrix(this.gl,[t,e],r,[h,l],!1),d=get_matrix(this.gl,[.2*s,.5*i],0,[.2,.5],!0);o.draw(a,c,d)}get(t){return this.shader_dict[t]}resize(t){const e=t.clientWidth,s=t.clientHeight;t.width===e&&t.height===s||(t.width=e,t.height=s)}before_render(){const t=this.gl;this.resize(t.canvas),t.viewport(0,0,t.canvas.width,t.canvas.height),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT)}createProgramFromText(t,e,s){const i=this.createShader(t,t.VERTEX_SHADER,e),n=this.createShader(t,t.FRAGMENT_SHADER,s);return this.createProgram(t,i,n)}createShader(t,e,s){let i=t.createShader(e);if(t.shaderSource(i,s),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS))return i;console.log(t.getShaderInfoLog(i)),t.deleteShader(i)}createProgram(t,e,s){let i=t.createProgram();if(t.attachShader(i,e),t.attachShader(i,s),t.linkProgram(i),t.getProgramParameter(i,t.LINK_STATUS))return i;console.log(t.getProgramInfoLog(i)),t.deleteProgram(i)}get_point_from(t,e,s,i){let n=t+s,o=e+i;return[t,e,n,e,t,o,t,o,n,e,n,o]}randomint_from_xy(t,e){return Math.floor(t+Math.random()*(e-t))}init(){new ImageShader(this),new RectShader(this),this.tm=new PreProcessTexture(this)}}class SplendorGameSocket{constructor(t){this.playground=t,this.start()}start(){}}class SplendorPlayground{constructor(t,e,s,i,n){this.menu=t,this.config=e,this.players=s,this.me=n,this.room_id=i,this.mode=this.config.single_mode||this.config.room_mode,this.player_number=this.config.single_player_number||this.config.room_player_number,this.round_second=this.config.room_round_second||30,this.$playground_div=$("<div class='playground'></div>"),this.menu.$menu_div.append(this.$playground_div),this.state="start",this.start()}start(){this.init_canvas_context(),this.init_shader_manager(),this.start_animation(),"单人"!==this.mode&&(this.socket=new SplendorGameSocket(this),this.chat=new SplendorChat(this)),this.top_board=new TopBoard(this),this.cards_manager=new CardsManager(this),this.tokens_manager=new TokensManager(this),this.nobles_manager=new NoblesManager(this),this.players_manager=new PlayersManager(this)}init_canvas_context(){this.$canvas=$("<canvas></canvas>"),this.$playground_div.append(this.$canvas),this.gl=this.$canvas[0].getContext("webgl"),this.gl||alert("未支持WebGl")}init_shader_manager(){this.shader_manager=new ShaderManager(this),this.shader_manager.init()}start_animation(){let t=e=>{this.shader_manager.before_render();for(let t=0;t<GAME_OBJECTS.length;t++){let s=GAME_OBJECTS[t];s.is_called_start?(s.update(),s.timedelta=e-last_timestamp):(s.start(),s.is_called_start=!0)}for(let t=0;t<GAME_OBJECTS.length;t++)GAME_OBJECTS[t].late_update();last_timestamp=e,requestAnimationFrame(t)};requestAnimationFrame(t)}close(){}}class SplendorRoom{constructor(t){this.root=t,this.players=[],this.start()}start(){this.create_base()}add_listening_events(){this.$room_wrap.find(".room-check-button > button").on("click",(()=>{let t=this.$room_wrap.find(".room-check-input > input").val();if(""===t)return!1;this.check_pass(t)})),this.$room_wrap.find(".room-start > button:first").on("click",(()=>{if(this.is_owner){if(this.players.length<this.config.room_player_number)return!1;this.root.socket.start_game(),this.start_game()}})),this.$room_wrap.find(".room-start > button:last").on("click",(()=>{this.is_owner&&(this.root.socket.cancel_room(),this.cancel_room())})),this.$room_wrap.find(".room-start > button:nth-child(2)").on("click",(()=>{let t=e=>{e.preventDefault(),e.clipboardData.setData("text/plain",`${BASE_URL}/splendor/page/menu/?room_id=${this.room_id}&need_pass=${this.need_pass}`),alert("复制链接成功, 分享给好友邀请加入游戏"),document.removeEventListener("copy",t)};document.addEventListener("copy",t),document.execCommand("Copy")}))}cancel_room(){window.location.href=`${BASE_URL}/splendor/`}start_game(){this.root.start_game(this.config,this.players,this.room_id)}create_base(){this.$room_wrap=$("\n<div class='room-wrap'>\n    <div class='room-check'>\n        <div class='room-check-title'>\n            <span>请输入房间密码</span>\n        </div>\n        <div class='room-check-input'>\n            <input type='text' maxlength='4' oninput= \"value = value.replace(/[^\\d]/g, '')\" name='room_pass'>\n        </div>\n        <div class='room-check-button'>\n            <button>确认</button>\n        </div>\n    </div>\n    <div class='room-box'>\n        <div class='room-title'>\n            <span></span>\n        </div>\n        <div class='room-player'>\n        </div>\n        <div class='room-start'>\n            <button>开始游戏</button>\n            <button>邀请玩家</button>\n            <button>解散房间</button>\n        </div>\n    </div>\n</div>\n"),this.$check=this.$room_wrap.find(".room-check"),this.$check.hide(),this.$box=this.$room_wrap.find(".room-box"),this.$box.hide(),this.$room_wrap.hide(),this.root.$menu_div.append(this.$room_wrap),this.add_listening_events()}show(){this.$room_wrap.show()}hide(){this.$room_wrap.hide()}create_room(t,e,s,i,n){this.room_id=e,this.is_owner=i,this.player_info=t,this.need_pass=s,this.config=n,this.$room_wrap.css("background-image","linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("+t.back+")"),i?(this.players.push(t),this.$box.find(".room-title > span").text("房间 "+this.room_id),this.padding_info(t),this.root.hide(),this.show(),this.$box.show()):(this.root.hide(),this.show(),"true"===s?this.$check.show():this.join_room(t,""))}check_pass(t){this.join_room(this.player_info,t)}join_room(t,e){setTimeout((()=>{this.root.socket.join_room(this.room_id,t,e)}),1e3)}receive_join_room(t,e){this.config=t,this.$check.hide(),this.playernumber=t.room_player_number,this.round_second=t.room_round_second,this.players=e,this.$box.find(".room-title > span").text("房间 "+this.room_id),this.$box.find(".room-player").empty();for(let t=0;t<e.length;t++)this.padding_info(e[t]);this.$box.show()}padding_info(t){let e=this.$box.find(".room-player"),s=$(`\n<div class='player-element'>\n    <div class='player-photo'>\n        <img src='${t.photo}'>\n    </div>\n    <div class='player-name'>\n        <span>${t.name}</span>\n    </div>\n</div>\n`);e.append(s)}}class SplendorRoomSocket{BASE_WSS="wss://app3774.acapp.acwing.com.cn";constructor(t){this.root=t,this.start()}start(){this.ws=new WebSocket(`${this.BASE_WSS}/wss/splendor/multiplayer/room/?token=`+localStorage.getItem("gc-access")),this.receive()}receive_create_room(t){this.root.room_id=t.room_id,this.root.need_pass=t.need_pass,this.root.receive_create_room(t.config)}create_room(t){let e={room_config:t,room_owner:this.root.player_info};this.ws.send(JSON.stringify({event:"create_room",content:e}))}cancel_room(){this.ws.send(JSON.stringify({event:"cancel_room",content:{cancel_room:"true"}}))}start_game(){this.ws.send(JSON.stringify({event:"start_game",content:{start_game:"true"}}))}join_room(t,e,s,i="false"){let n={room_id:t,pass:s,player_info:e,player_info:e,match:i};this.ws.send(JSON.stringify({event:"join_room",content:n}))}receive_join_room(t){t.players.length>=4&&this.root.start_game(t.config,t.players,t.room_id)}receive_match_success(t){this.root.match_success(t)}stop_match(t,e){let s={email:t,score:e};this.ws.send(JSON.stringify({event:"stop_match",content:s}))}match(t,e){let s={email:t,score:e};this.ws.send(JSON.stringify({event:"match",content:s}))}receive(){this.ws.onmessage=t=>{let e=JSON.parse(t.data),s=e.event,i=e.content;if("create_room"===s)this.receive_create_room(i);else if("join_room"===s)"false"===i.match?this.root.room.receive_join_room(i.config,i.players):this.receive_join_room(i);else if("match_success"===s)this.receive_match_success(i);else{if(e.email===this.root.player_info.email)return!1;"start_game"===s?this.root.room.start_game():"cancel_room"===s&&this.root.room.cancel_room()}}}}
